#!/bin/sh

print_help() {
cat <<EOF
Usage: jotter-keyword [OPTIONS] [KEYWORD]

Show all files associated with a specific keyword.

Options:
    -c  --count     Show keyword counts (implies --list)
    -l  --list      List all keywords used in this jotter
    -h  --help      Print this help message and exit

EOF
exit 0
}

list=0; count=0
while test "$#" -gt 0; do
    case "$1" in
        -h|--help)
            print_help; exit 0;;
        -l|--list)
            list=1; shift;;
        -c|--count)
            list=1; count=1; shift;;
        --)
            shift; break;;
        -*)
            echo "Unknown option '$1'" >&2; exit 1;;
        *)
            break;;
    esac
done
if test "$list" = 0 && test "$#" = 0; then
    echo "Neither list nor a keyword have been specified!" >&1
    exit 1
fi

fd -I -e md | while read filename; do
    cat "$filename" | awk '
        ablock == 0 && bblock == 0 && /^```/    { ablock = 1; next }
        ablock == 0 && bblock == 0 && /^~~~/    { bblock = 1; next }
        ablock == 1 && /^```/                   { ablock = 0 }
        bblock == 1 && /^~~~/                   { bblock = 0 }
        ablock == 1                             { next }
        bblock == 1                             { next }

        /^---$/ && yaml == 0        { mayyaml = 1; next }
        mayyaml == 1 && /[^ \t]/    { yaml = 1 }
        mayyaml == 1                { mayyaml = 0 }
        /^---$/ && yaml == 1        { yaml = 0; next }
        /^\.\.\.$/ && yaml == 1     { yaml = 0; next }
        /^keywords:/ && yaml == 1     { keywords = 1; next }
        /^[^ ]/ && keywords == 1      { keywords = 0; next }

        yaml && keywords              { print }
    ' |
    grep '^[ \t]*-[ \t][ \t]*' |
    sed 's,^[ \t]*-[ \t][ \t]*,,;s,[ \t]*$,,' |
    sed 's,\t, ,' |     # Ensure keywords do not contain tabs
    while read keyword; do
        printf '%s\t%s\n' "$keyword" "$filename"
    done | sort | uniq   # Deduplicate repeated entries in a single file
done |
    if test "$list" = 1; then
        sed 's,\t.*,,g' | sort |
            if test "$count" = 1; then uniq -c; else uniq; fi
    else
        grep '^'"$(echo $@)" | sed 's,^[^\t]*\t,,' | sort | uniq
    fi
