#!/usr/bin/env python3

import sys, os
from jotter import *
from getopt import gnu_getopt as getopt

_cli_help = """
Usage: jotter-ln [-i|-r] REMOTE [LOCAL]
   Or: jotter-ln -l

Link a remote jotter into a local one. Note that remote, in this case,
means located in a different directory. It does not mean located on a
different machine as it would with git, for instance.

Options
  -i, --init      Initialize a new LOCAL jotter if it does not exist.
                  In order to use the --init option, it is mandatory
                  to specify the LOCAL path explicitly.
  -r, --remove    Remove an existing link, rather than creating
                  a new one.
  -l, --list      List links found in this jotter.
  -h, --help      Print this help message and exit.
""".lstrip()

if __name__ == "__main__":
    opts, args = getopt(sys.argv[1:], 'irlh', ['init', 'remove', 'list',
                        'help'])
    short2long = { '-i': 'init', '-r': 'remove', '-l': 'list', '-h': 'help' }
    opts = { k[2:] if k.startswith('--') else short2long[k]: v
             for k, v in opts }
    if 'help' in opts:
        print(_cli_help); exit(0)
    elif 'list' in opts:
        if len(opts.keys()) > 1:
            print('The --list option cannot be combined with other options',
                  file=sys.stderr)
            exit(1)
        elif args:
            print('The --list option cannot be combined with further ' \
                  'arguments', file=sys.stderr)
            exit(1)
        rootdir = findrootdir()
        if rootdir == None:
            print('Unable to locate jotter root directory', file=sys.stderr)
            exit(1)
        os.chdir(rootdir)
        config = JotterConfig('.jotter/config')
        for link in config.links: print(link)
    else:
        if 'init' in opts and 'remove' in opts:
            print('The --init and --remove options cannot be combined',
                  file=sys.stderr)
            exit(1)
        if len(args) < 1 or len(args) > 2:
            print('Wrong number of positional arguments: expected either ' \
                  f'1 or 2, found {len(args)}', file=sys.stderr)
            exit(1)
        remote, local, *_ = args + [None]
        if remote.endswith('/'): remote = remote.rstrip('/')
        rootdir = local if local != None else findrootdir()
        if rootdir == None:
            print('Unable to locate jotter root directory', file=sys.stderr)
            exit(1)
        elif os.path.isfile('.jotter/config'):
            os.chdir(rootdir)
            config = JotterConfig('.jotter/config')
        elif 'init' in opts:
            os.chdir(rootdir)
            os.makedirs('.jotter')
            config = JotterConfig(None)
        else:
            print('Unable to locate jotter configuration file',
                  file=sys.stderr)
            exit(1)
        if 'remove' in opts:
            if remote not in config.links:
                print(f'Remote {remote} is not linked into this jotter',
                      file=sys.stderr)
                exit(1)
            config.links.remove(remote)
            config.write('.jotter/config')
        else:
            if remote in config.links:
                print(f'Remote {remote} is already linked into this jotter',
                      file=sys.stderr)
                exit(1)
            config.links.append(remote)
            config.write('.jotter/config')
